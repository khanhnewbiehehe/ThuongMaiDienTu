@model ThuongMaiDienTu.Models.Product
@{
    int index = 0;
}

<div class="container p-5">
    <div class="mt-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="blue" width="16px" class="me-2" viewBox="0 0 576 512">
                            <path d="M575.8 255.5c0 18-15 32.1-32 32.1l-32 0 .7 160.2c0 2.7-.2 5.4-.5 8.1l0 16.2c0 22.1-17.9 40-40 40l-16 0c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1L416 512l-24 0c-22.1 0-40-17.9-40-40l0-24 0-64c0-17.7-14.3-32-32-32l-64 0c-17.7 0-32 14.3-32 32l0 64 0 24c0 22.1-17.9 40-40 40l-24 0-31.9 0c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2l-16 0c-22.1 0-40-17.9-40-40l0-112c0-.9 0-1.9 .1-2.8l0-69.7-32 0c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z" />
                        </svg>
                        Home
                    </a></li>
                <li class="breadcrumb-item active" aria-current="page">Chi tiết sản phẩm</li>
            </ol>
        </nav>
    </div>
    <div class="card mt-3 productDetails-card mx-auto shadow">
        <div class="card-header">
            Chi tiết sản phẩm
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-6">
                    <div class="card-media p-3">
                        <div id="carouselExampleIndicators" class="carousel slide shadow">
                            <div class="carousel-indicators">
                                @{
                                    index = 0;
                                    foreach (var item in Model.Images){
                                        if(index == 0)
                                        {
                                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@index" class="active" aria-current="true" aria-label="Slide @(index+1)"></button>
                                        }
                                        else
                                        {
                                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@index" aria-label="Slide @(index+1)"></button>
                                        }
                                        index++;
                                    }
                                }
                            </div>
                            <div class="carousel-inner">
                                @{
                                    index = 0;
                                    foreach(var item in Model.Images)
                                    {
                                        if(index == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img src="@item.Url" class="d-block w-100" alt="Ảnh sản phẩm">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img src="@item.Url" class="d-block w-100" alt="Ảnh sản phẩm">
                                            </div>
                                        }                                        
                                        index++;
                                    }
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    </div>    
                </div>
                <div class="col-6">
                    <div class="card-content p-3">
                        <p class="card-title">@Model.Name</p>
                        <div class="d-flex flex-wrap justify-content-start mt-3">
                            @{
                                <div class="mini-card mt-3 shadow mx-2">
                                    <div class="card-header">0</div>
                                    <div class="card-body">@Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.FirstOrDefault().MaxPrice.ToString("N0")</div>
                                </div>
                                foreach(var item in Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.ToList()[0].Prices)
                                {
                                    <div class="mini-card shadow mt-3 mx-2">
                                        <div class="card-header">@item.Number</div>
                                        <div class="card-body">@item.Price.ToString("N0")</div>
                                    </div>
                                }
                            }
                        </div>
                        @{
                            double percent = ViewBag.Registration * 100.0 / ViewBag.Quantity;
                        }
                        <div class="progress mt-3" role="progressbar" title="@ViewBag.Registration" aria-label="Animated striped example" aria-valuenow="@percent" aria-valuemin="0" aria-valuemax="100">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: @percent%"></div>
                        </div>
                        <div class="d-flex justify-content-between mt-1">
                            <div class="sub-title">Tích lũy: <span class="badge bg-warning">@ViewBag.Registration</span></div>
                            <div class="sub-title">Tối đa: <span class="badge bg-success">@ViewBag.Quantity</span></div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="sub-title">Thời gian mở bán:</div>
                            <div class="my_countdown d-flex justify-content-center align-items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                    <path d="M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z" />
                                </svg>
                                <span id="countdown--1" data-end="@Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().DateEnd"></span>
                            </div>
                        </div>

                        <div class="d-flex mt-3 align-items-center">
                            <div class="sub-title me-2">Loại:</div>
                            <div class="d-flex">
                                @{
                                    foreach (var item in Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types)
                                    {
                                        <div class="card mx-2 type-card">
                                            <div class="card-image">
                                                <img src="@item.ImageUrl" alt="Ảnh sản phẩm"></img>
                                            </div>
                                            <div class=" d-flex justify-content-center align-items-center px-2">
                                                <span class="text-dark">@item.Name</span>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <div class="mt-4">
                            <a href="/Account/Login" class="btn btn-danger fw-bold">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" class="me-2" viewBox="0 0 512 512">
                                    <path d="M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8l0-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5l0 3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20-.1-.1s0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5l0 3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2l0-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z" />
                                </svg>
                                Yêu thích
                            </a>
                            @{
                                if (DateTime.Now < @Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().DateEnd)
                                {
                                    <button class="btn btn-success fw-bold" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" class="me-2" viewBox="0 0 576 512">
                                            <path d="M0 24C0 10.7 10.7 0 24 0L69.5 0c22 0 41.5 12.8 50.6 32l411 0c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3l-288.5 0 5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5L488 336c13.3 0 24 10.7 24 24s-10.7 24-24 24l-288.3 0c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5L24 48C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
                                        </svg>
                                        Đặt hàng
                                    </button>
                                }
                            }
                          
                        </div>
                    </div>
     

                </div>
            </div>
            <div class="sub-card shadow mx-3">
                <div class="card-header d-flex justify-content-between">
                    <div>Mô tả sản phẩm</div>
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" viewBox="0 0 320 512">
                            <path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z" />
                        </svg>
                    </div>
                </div>
                <div class="card-body d-none">
                    @Model.Description
                </div>
            </div>
            <div class="sub-card shadow mx-3">
                <div class="card-header d-flex justify-content-between">
                    <div>Đánh giá sản phẩm</div>
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" viewBox="0 0 320 512">
                            <path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z" />
                        </svg>
                    </div>
                </div>
                <div class="card-body d-none">
                    Chưa có đánh giá nào
                </div>
            </div>
        </div>
    </div>
    <div class="trend_product">
        <h3 class="my_smalltitle">Trending</h3>
        <div id="list-product" class="list_product owl-carousel carousel-1">
            
        </div>
    </div>
</div>

<div class="offcanvas offcanvas-start my-offcanvas" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header d-flex justify-content-between">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">Danh sách loại sản phẩm</h5>
        <button type="button" data-bs-dismiss="offcanvas" aria-label="Close">
            <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" viewBox="0 0 384 512">
                <path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z" />
            </svg>
        </button>
    </div>
    <div class="offcanvas-body">
        <div class="list-productTypes">
            @{
                foreach (var item in Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types)
                {
                    <div class="card shadow p-3 my-2">
                        <div class="d-flex">
                            <div class="card-image">
                                <img src="@item.ImageUrl" alt="Ảnh sản phẩm"></img>
                            </div>
                            <div class="ms-3">
                                <p class="card-title">@item.Name</p>
                                <div class="quantity-input mt-4">
                                    <button type="button" class="decrease">−</button>
                                    <input type="number" min="0" value="0" id="quantity" />
                                    <button type="button" class="increase">+</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="mt-3">
            <p><strong>Tổng số lượng muốn mua: </strong><span id="Total-product">0</span></p>
        </div>
        <a href="/Account/Login" class="btn btn-success fw-bold mt-3">
            <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" class="me-2" viewBox="0 0 576 512">
                <path d="M0 24C0 10.7 10.7 0 24 0L69.5 0c22 0 41.5 12.8 50.6 32l411 0c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3l-288.5 0 5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5L488 336c13.3 0 24 10.7 24 24s-10.7 24-24 24l-288.3 0c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5L24 48C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
            </svg>
            Đặt hàng
        </a>
        <div class="mt-2">
            <span class="text-danger fw-bold text-decoration-underline">Ghi chú:</span>
            Bạn cần phải cọc <span class="text-danger fw-bold text-decoration-underline">30% giá trị đơn hàng theo giá tối đa</span> để phòng trường hợp khi bạn hủy yêu cầu chúng tôi sẽ dùng tiền đó để bù cho những khách hàng khác để đảm bảo quyền lợi về giá cho họ. Xin cảm ơn!
        </div>
    </div>
</div>

@section Scripts{
    <script>
        // Chọn tất cả các SVG trong card-header
        document.querySelectorAll('.card-header svg').forEach(svg => {
            svg.addEventListener('click', function () {
                const cardBody = this.closest('.sub-card').querySelector('.card-body');
                cardBody.classList.toggle('d-none'); // Ẩn/hiện phần nội dung tương ứng
            });
        });
    </script>
    <script>
        function updateTotal() {
          let total = 0;
          document.querySelectorAll('.quantity-input input').forEach(input => {
            const value = parseInt(input.value) || 0;
            total += value;
          });
          document.getElementById('Total-product').textContent = total;
        }

        document.querySelectorAll('.quantity-input').forEach(container => {
          const input = container.querySelector('input');
          const btnDecrease = container.querySelector('.decrease');
          const btnIncrease = container.querySelector('.increase');

          btnDecrease.addEventListener('click', () => {
            let value = parseInt(input.value) || 0;
            input.value = value > 0 ? value - 1 : 0;
            updateTotal();
          });

          btnIncrease.addEventListener('click', () => {
            let value = parseInt(input.value) || 0;
            input.value = value + 1;
            updateTotal();
          });

          input.addEventListener('input', () => {
            let value = parseInt(input.value);
            input.value = isNaN(value) || value < 0 ? 0 : value;
            updateTotal();
          });

          input.addEventListener('blur', () => {
            // Xoá số 0 ở đầu nếu có (trừ khi là số 0 duy nhất)
            let value = parseInt(input.value) || 0;
            input.value = value;
          });
        });

        // Tính tổng khi trang vừa load
        updateTotal();
    </script>
    <script src="~/LoadData/LoadProduct.js"></script>

}